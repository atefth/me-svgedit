{"ast":null,"code":"import _asyncToGenerator from \"C:/Projects/lib-workspace/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * @file ext-panning.js\n *\n * @license MIT\n *\n * @copyright 2013 Luis Aguirre\n *\n */\nconst n = \"panning\",\n      loadExtensionTranslation = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (e) {\n    let o;\n    const i = e.configObj.pref(\"lang\");\n\n    try {\n      o = yield function __variableDynamicImportRuntime0__(n) {\n        switch (n) {\n          case \"./locale/en.js\":\n            return Promise.resolve().then(function () {\n              return t;\n            });\n\n          case \"./locale/zh-CN.js\":\n            return Promise.resolve().then(function () {\n              return a;\n            });\n\n          default:\n            return new Promise(function (e, t) {\n              (\"function\" == typeof queueMicrotask ? queueMicrotask : setTimeout)(t.bind(null, new Error(\"Unknown variable dynamic import: \" + n)));\n            });\n        }\n      }(\"./locale/\".concat(i, \".js\"));\n    } catch (e) {\n      console.warn(\"Missing translation (\".concat(i, \") for \").concat(n, \" - using 'en'\")), o = yield Promise.resolve().then(function () {\n        return t;\n      });\n    }\n\n    e.i18next.addResourceBundle(i, n, o.default);\n  });\n\n  return function loadExtensionTranslation(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar e = {\n  name: n,\n\n  init() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const e = _this;\n      yield loadExtensionTranslation(e);\n      const {\n        svgCanvas: t\n      } = e,\n            {\n        $id: a\n      } = t;\n      return {\n        name: e.i18next.t(\"\".concat(n, \":name\")),\n\n        callback() {\n          const e = \"\".concat(n, \":buttons.0.title\"),\n                o = document.createElement(\"template\");\n          var i, r;\n          o.innerHTML = '\\n        <se-button id=\"ext-panning\" title=\"'.concat(e, '\" src=\"panning.svg\"></se-button>\\n        '), i = a(\"tool_zoom\"), r = o.content.cloneNode(!0), i.parentNode.insertBefore(r, i.nextSibling), a(\"ext-panning\").addEventListener(\"click\", () => {\n            this.leftPanel.updateLeftPanel(\"ext-panning\") && t.setMode(\"ext-panning\");\n          });\n        },\n\n        mouseDown() {\n          if (\"ext-panning\" === t.getMode()) return e.setPanning(!0), {\n            started: !0\n          };\n        },\n\n        mouseUp() {\n          if (\"ext-panning\" === t.getMode()) return e.setPanning(!1), {\n            keep: !1,\n            element: null\n          };\n        }\n\n      };\n    })();\n  }\n\n},\n    t = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"Extension Panning\",\n    buttons: [{\n      title: \"Panning\"\n    }]\n  }\n}),\n    a = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"移动\",\n    buttons: [{\n      title: \"移动\"\n    }]\n  }\n});\nexport { e as default }; //# sourceMappingURL=ext-panning.js.map","map":null,"metadata":{},"sourceType":"module"}