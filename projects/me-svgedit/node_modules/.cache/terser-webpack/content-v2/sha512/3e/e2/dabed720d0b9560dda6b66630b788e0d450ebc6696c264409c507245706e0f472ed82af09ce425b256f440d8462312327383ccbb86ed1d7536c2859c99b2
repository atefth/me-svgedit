{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{Fw87:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"default\",function(){return r});var o=n(\"20ZU\");const i=function(){var e=Object(o.a)(function*(e){let t;const n=e.configObj.pref(\"lang\");try{t=yield function(e){switch(e){case\"./locale/en.js\":return Promise.resolve().then(function(){return a});case\"./locale/fr.js\":return Promise.resolve().then(function(){return c});case\"./locale/zh-CN.js\":return Promise.resolve().then(function(){return s});default:return new Promise(function(t,n){(\"function\"==typeof queueMicrotask?queueMicrotask:setTimeout)(n.bind(null,new Error(\"Unknown variable dynamic import: \"+e)))})}}(\"./locale/\".concat(n,\".js\"))}catch(e){console.warn(\"Missing translation (\".concat(n,\") for \").concat(\"grid\",\" - using 'en'\")),t=yield Promise.resolve().then(function(){return a})}e.i18next.addResourceBundle(n,\"grid\",t.default)});return function(t){return e.apply(this,arguments)}}();var r={name:\"grid\",init(){var e=this;return Object(o.a)(function*(){const t=e;yield i(t);const{svgCanvas:n}=t,{$id:o,NS:r}=n,a=o(\"svgcanvas\").ownerDocument,{assignAttributes:c}=n,s=document.createElement(\"canvas\"),l=o(\"canvasBackground\"),d=n.getTypeMap(),u=[.01,.1,1,10,100,1e3];let g=t.configObj.curConfig.showGrid||!1;s.style.display=\"none\",t.$svgEditor.appendChild(s);const p=a.createElementNS(r.SVG,\"svg\");c(p,{id:\"canvasGrid\",width:\"100%\",height:\"100%\",x:0,y:0,overflow:\"visible\",display:\"none\"}),l.appendChild(p);const h=a.createElementNS(r.SVG,\"defs\"),f=a.createElementNS(r.SVG,\"pattern\");c(f,{id:\"gridpattern\",patternUnits:\"userSpaceOnUse\",x:0,y:0,width:100,height:100});const m=a.createElementNS(r.SVG,\"image\");c(m,{x:0,y:0,width:100,height:100}),f.append(m),h.append(f),o(\"canvasGrid\").appendChild(h);const v=a.createElementNS(r.SVG,\"rect\");c(v,{width:\"100%\",height:\"100%\",x:0,y:0,\"stroke-width\":0,stroke:\"none\",fill:\"url(#gridpattern)\",style:\"pointer-events: none; display:visible;\"}),o(\"canvasGrid\").appendChild(v);const b=e=>{const o=d[t.configObj.curConfig.baseUnit]*e,i=100/o;let r=1;u.some(e=>(r=e,i<=e));const a=r*o;s.width=a,s.height=a;const c=s.getContext(\"2d\"),l=.5,g=a/10;c.globalAlpha=.2,c.strokeStyle=t.configObj.curConfig.gridColor;for(let t=1;t<10;t++){const e=Math.round(g*t)+.5,n=0;c.moveTo(e,a),c.lineTo(e,n),c.moveTo(a,e),c.lineTo(n,e)}c.stroke(),c.beginPath(),c.globalAlpha=.5,c.moveTo(l,a),c.lineTo(l,0),c.moveTo(a,l),c.lineTo(0,l),c.stroke();const p=s.toDataURL(\"image/png\");m.setAttribute(\"width\",a),m.setAttribute(\"height\",a),m.parentNode.setAttribute(\"width\",a),m.parentNode.setAttribute(\"height\",a),n.setHref(m,p)},w=()=>{g&&b(n.getZoom()),o(\"canvasGrid\").style.display=g?\"block\":\"none\",o(\"view_grid\").pressed=g};return{name:t.i18next.t(\"\".concat(\"grid\",\":name\")),zoomChanged(e){g&&b(e)},callback(){const e=document.createElement(\"template\"),n=\"\".concat(\"grid\",\":buttons.0.title\");e.innerHTML='\\n          <se-button id=\"view_grid\" title=\"'.concat(n,'\" src=\"grid.svg\"></se-button>\\n        '),o(\"editor_panel\").append(e.content.cloneNode(!0)),o(\"view_grid\").addEventListener(\"click\",()=>{t.configObj.curConfig.showGrid=g=!g,w()}),g&&w()}}})()}},a=Object.freeze({__proto__:null,default:{name:\"View Grid\",buttons:[{title:\"Show/Hide Grid\"}]}}),c=Object.freeze({__proto__:null,default:{name:\"Grille\",buttons:[{title:\"Afficher/Cacher Grille\"}]}}),s=Object.freeze({__proto__:null,default:{name:\"\\u7f51\\u683c\\u89c6\\u56fe\",buttons:[{title:\"\\u663e\\u793a/\\u9690\\u85cf\\u7f51\\u683c\"}]}})}}]);","name":"5.4b48202ace0183338ba9.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[5],{\n\n/***/ \"Fw87\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return e; });\n/* harmony import */ var C_Projects_lib_workspace_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"20ZU\");\n\n\n/**\n * @file ext-grid.js\n *\n * @license Apache-2.0\n *\n * @copyright 2010 Redou Mine, 2010 Alexis Deveria\n *\n */\nconst loadExtensionTranslation = /*#__PURE__*/function () {\n  var _ref = Object(C_Projects_lib_workspace_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(function* (e) {\n    let o;\n    const r = e.configObj.pref(\"lang\");\n\n    try {\n      o = yield function __variableDynamicImportRuntime0__(e) {\n        switch (e) {\n          case \"./locale/en.js\":\n            return Promise.resolve().then(function () {\n              return t;\n            });\n\n          case \"./locale/fr.js\":\n            return Promise.resolve().then(function () {\n              return n;\n            });\n\n          case \"./locale/zh-CN.js\":\n            return Promise.resolve().then(function () {\n              return i;\n            });\n\n          default:\n            return new Promise(function (t, n) {\n              (\"function\" == typeof queueMicrotask ? queueMicrotask : setTimeout)(n.bind(null, new Error(\"Unknown variable dynamic import: \" + e)));\n            });\n        }\n      }(\"./locale/\".concat(r, \".js\"));\n    } catch (e) {\n      console.warn(\"Missing translation (\".concat(r, \") for \").concat(\"grid\", \" - using 'en'\")), o = yield Promise.resolve().then(function () {\n        return t;\n      });\n    }\n\n    e.i18next.addResourceBundle(r, \"grid\", o.default);\n  });\n\n  return function loadExtensionTranslation(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar e = {\n  name: \"grid\",\n\n  init() {\n    var _this = this;\n\n    return Object(C_Projects_lib_workspace_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(function* () {\n      const e = _this;\n      yield loadExtensionTranslation(e);\n      const {\n        svgCanvas: t\n      } = e,\n            {\n        $id: n,\n        NS: i\n      } = t,\n            o = n(\"svgcanvas\").ownerDocument,\n            {\n        assignAttributes: r\n      } = t,\n            a = document.createElement(\"canvas\"),\n            s = n(\"canvasBackground\"),\n            c = t.getTypeMap(),\n            l = [.01, .1, 1, 10, 100, 1e3];\n      let d = e.configObj.curConfig.showGrid || !1;\n      a.style.display = \"none\", e.$svgEditor.appendChild(a);\n      const u = o.createElementNS(i.SVG, \"svg\");\n      r(u, {\n        id: \"canvasGrid\",\n        width: \"100%\",\n        height: \"100%\",\n        x: 0,\n        y: 0,\n        overflow: \"visible\",\n        display: \"none\"\n      }), s.appendChild(u);\n      const g = o.createElementNS(i.SVG, \"defs\"),\n            h = o.createElementNS(i.SVG, \"pattern\");\n      r(h, {\n        id: \"gridpattern\",\n        patternUnits: \"userSpaceOnUse\",\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100\n      });\n      const p = o.createElementNS(i.SVG, \"image\");\n      r(p, {\n        x: 0,\n        y: 0,\n        width: 100,\n        height: 100\n      }), h.append(p), g.append(h), n(\"canvasGrid\").appendChild(g);\n      const f = o.createElementNS(i.SVG, \"rect\");\n      r(f, {\n        width: \"100%\",\n        height: \"100%\",\n        x: 0,\n        y: 0,\n        \"stroke-width\": 0,\n        stroke: \"none\",\n        fill: \"url(#gridpattern)\",\n        style: \"pointer-events: none; display:visible;\"\n      }), n(\"canvasGrid\").appendChild(f);\n\n      const updateGrid = n => {\n        const i = c[e.configObj.curConfig.baseUnit] * n,\n              o = 100 / i;\n        let r = 1;\n        l.some(e => (r = e, o <= e));\n        const s = r * i;\n        a.width = s, a.height = s;\n        const d = a.getContext(\"2d\"),\n              u = .5,\n              g = s / 10;\n        d.globalAlpha = .2, d.strokeStyle = e.configObj.curConfig.gridColor;\n\n        for (let e = 1; e < 10; e++) {\n          const t = Math.round(g * e) + .5,\n                n = 0;\n          d.moveTo(t, s), d.lineTo(t, n), d.moveTo(s, t), d.lineTo(n, t);\n        }\n\n        d.stroke(), d.beginPath(), d.globalAlpha = .5, d.moveTo(u, s), d.lineTo(u, 0), d.moveTo(s, u), d.lineTo(0, u), d.stroke();\n        const h = a.toDataURL(\"image/png\");\n        p.setAttribute(\"width\", s), p.setAttribute(\"height\", s), p.parentNode.setAttribute(\"width\", s), p.parentNode.setAttribute(\"height\", s), t.setHref(p, h);\n      },\n            gridUpdate = () => {\n        d && updateGrid(t.getZoom()), n(\"canvasGrid\").style.display = d ? \"block\" : \"none\", n(\"view_grid\").pressed = d;\n      };\n\n      return {\n        name: e.i18next.t(\"\".concat(\"grid\", \":name\")),\n\n        zoomChanged(e) {\n          d && updateGrid(e);\n        },\n\n        callback() {\n          const t = document.createElement(\"template\"),\n                i = \"\".concat(\"grid\", \":buttons.0.title\");\n          t.innerHTML = '\\n          <se-button id=\"view_grid\" title=\"'.concat(i, '\" src=\"grid.svg\"></se-button>\\n        '), n(\"editor_panel\").append(t.content.cloneNode(!0)), n(\"view_grid\").addEventListener(\"click\", () => {\n            e.configObj.curConfig.showGrid = d = !d, gridUpdate();\n          }), d && gridUpdate();\n        }\n\n      };\n    })();\n  }\n\n},\n    t = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"View Grid\",\n    buttons: [{\n      title: \"Show/Hide Grid\"\n    }]\n  }\n}),\n    n = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"Grille\",\n    buttons: [{\n      title: \"Afficher/Cacher Grille\"\n    }]\n  }\n}),\n    i = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"网格视图\",\n    buttons: [{\n      title: \"显示/隐藏网格\"\n    }]\n  }\n});\n //# sourceMappingURL=ext-grid.js.map\n\n/***/ })\n\n}]);","inputSourceMap":null}