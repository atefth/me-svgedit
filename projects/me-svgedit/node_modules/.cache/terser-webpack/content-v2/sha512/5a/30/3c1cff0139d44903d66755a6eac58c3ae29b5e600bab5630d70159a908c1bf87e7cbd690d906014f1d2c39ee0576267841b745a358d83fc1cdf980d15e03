{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{\"8ct0\":function(n,e,t){\"use strict\";t.r(e),t.d(e,\"default\",function(){return r});var o=t(\"20ZU\");const i=\"panning\",a=function(){var n=Object(o.a)(function*(n){let e;const t=n.configObj.pref(\"lang\");try{e=yield function(n){switch(n){case\"./locale/en.js\":return Promise.resolve().then(function(){return c});case\"./locale/zh-CN.js\":return Promise.resolve().then(function(){return s});default:return new Promise(function(e,t){(\"function\"==typeof queueMicrotask?queueMicrotask:setTimeout)(t.bind(null,new Error(\"Unknown variable dynamic import: \"+n)))})}}(\"./locale/\".concat(t,\".js\"))}catch(n){console.warn(\"Missing translation (\".concat(t,\") for \").concat(i,\" - using 'en'\")),e=yield Promise.resolve().then(function(){return c})}n.i18next.addResourceBundle(t,i,e.default)});return function(e){return n.apply(this,arguments)}}();var r={name:i,init(){var n=this;return Object(o.a)(function*(){const e=n;yield a(e);const{svgCanvas:t}=e,{$id:o}=t;return{name:e.i18next.t(\"\".concat(i,\":name\")),callback(){const n=\"\".concat(i,\":buttons.0.title\"),e=document.createElement(\"template\");var a,r;e.innerHTML='\\n        <se-button id=\"ext-panning\" title=\"'.concat(n,'\" src=\"panning.svg\"></se-button>\\n        '),a=o(\"tool_zoom\"),r=e.content.cloneNode(!0),a.parentNode.insertBefore(r,a.nextSibling),o(\"ext-panning\").addEventListener(\"click\",()=>{this.leftPanel.updateLeftPanel(\"ext-panning\")&&t.setMode(\"ext-panning\")})},mouseDown(){if(\"ext-panning\"===t.getMode())return e.setPanning(!0),{started:!0}},mouseUp(){if(\"ext-panning\"===t.getMode())return e.setPanning(!1),{keep:!1,element:null}}}})()}},c=Object.freeze({__proto__:null,default:{name:\"Extension Panning\",buttons:[{title:\"Panning\"}]}}),s=Object.freeze({__proto__:null,default:{name:\"\\u79fb\\u52a8\",buttons:[{title:\"\\u79fb\\u52a8\"}]}})}}]);","name":"11.f8fd9f2c4fc8a39e26af.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[11],{\n\n/***/ \"8ct0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return e; });\n/* harmony import */ var C_Projects_lib_workspace_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"20ZU\");\n\n\n/**\n * @file ext-panning.js\n *\n * @license MIT\n *\n * @copyright 2013 Luis Aguirre\n *\n */\nconst n = \"panning\",\n      loadExtensionTranslation = /*#__PURE__*/function () {\n  var _ref = Object(C_Projects_lib_workspace_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(function* (e) {\n    let o;\n    const i = e.configObj.pref(\"lang\");\n\n    try {\n      o = yield function __variableDynamicImportRuntime0__(n) {\n        switch (n) {\n          case \"./locale/en.js\":\n            return Promise.resolve().then(function () {\n              return t;\n            });\n\n          case \"./locale/zh-CN.js\":\n            return Promise.resolve().then(function () {\n              return a;\n            });\n\n          default:\n            return new Promise(function (e, t) {\n              (\"function\" == typeof queueMicrotask ? queueMicrotask : setTimeout)(t.bind(null, new Error(\"Unknown variable dynamic import: \" + n)));\n            });\n        }\n      }(\"./locale/\".concat(i, \".js\"));\n    } catch (e) {\n      console.warn(\"Missing translation (\".concat(i, \") for \").concat(n, \" - using 'en'\")), o = yield Promise.resolve().then(function () {\n        return t;\n      });\n    }\n\n    e.i18next.addResourceBundle(i, n, o.default);\n  });\n\n  return function loadExtensionTranslation(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar e = {\n  name: n,\n\n  init() {\n    var _this = this;\n\n    return Object(C_Projects_lib_workspace_node_modules_angular_devkit_build_angular_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])(function* () {\n      const e = _this;\n      yield loadExtensionTranslation(e);\n      const {\n        svgCanvas: t\n      } = e,\n            {\n        $id: a\n      } = t;\n      return {\n        name: e.i18next.t(\"\".concat(n, \":name\")),\n\n        callback() {\n          const e = \"\".concat(n, \":buttons.0.title\"),\n                o = document.createElement(\"template\");\n          var i, r;\n          o.innerHTML = '\\n        <se-button id=\"ext-panning\" title=\"'.concat(e, '\" src=\"panning.svg\"></se-button>\\n        '), i = a(\"tool_zoom\"), r = o.content.cloneNode(!0), i.parentNode.insertBefore(r, i.nextSibling), a(\"ext-panning\").addEventListener(\"click\", () => {\n            this.leftPanel.updateLeftPanel(\"ext-panning\") && t.setMode(\"ext-panning\");\n          });\n        },\n\n        mouseDown() {\n          if (\"ext-panning\" === t.getMode()) return e.setPanning(!0), {\n            started: !0\n          };\n        },\n\n        mouseUp() {\n          if (\"ext-panning\" === t.getMode()) return e.setPanning(!1), {\n            keep: !1,\n            element: null\n          };\n        }\n\n      };\n    })();\n  }\n\n},\n    t = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"Extension Panning\",\n    buttons: [{\n      title: \"Panning\"\n    }]\n  }\n}),\n    a = Object.freeze({\n  __proto__: null,\n  default: {\n    name: \"移动\",\n    buttons: [{\n      title: \"移动\"\n    }]\n  }\n});\n //# sourceMappingURL=ext-panning.js.map\n\n/***/ })\n\n}]);","inputSourceMap":null}